// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: product.sql

package query

import (
	"context"
)

const listProducts = `-- name: ListProducts :many
SELECT id, name, description, category_id, price, ` + "`" + `rank` + "`" + `, created_at, updated_at FROM ` + "`" + `product` + "`" + ` 
WHERE ` + "`" + `category_id` + "`" + ` = ? 
ORDER BY ` + "`" + `rank` + "`" + ` DESC
`

func (q *Queries) ListProducts(ctx context.Context, categoryID int64) ([]Product, error) {
	rows, err := q.db.QueryContext(ctx, listProducts, categoryID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Product
	for rows.Next() {
		var i Product
		if err := rows.Scan(
			&i.ID,
			&i.Name,
			&i.Description,
			&i.CategoryID,
			&i.Price,
			&i.Rank,
			&i.CreatedAt,
			&i.UpdatedAt,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
